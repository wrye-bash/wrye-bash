#! /usr/bin/env python

"""Keywords (from "graminit.c")

This file is automatically generated; please don't muck it up!

To update the symbols in this file, 'cd' to the top directory of
the python source tree after building the interpreter and run:

    python Lib/keyword.py
"""

__all__ = ["iskeyword", "kwlist"]

kwlist = [
#--start keywords2--
        'CompareGameVersion',   #Function
        'CompareGEVersion',     #Function
        'CompareOBGEVersion',   #Deprecated Function
        'CompareOBSEVersion',   #Deprecated Function
        'CompareObVersion',     #Deprecated Function
        'CompareSEVersion',     #Function
        'CompareWBVersion',     #Function
        'DataFileExists',       #Function
        'Elif',                 #Keyword
        'Else',                 #Keyword
        'EndFor',               #Keyword
        'EndIf',                #Keyword
        'endswith',             #Function
        'EndWhile',             #Keyword
        'False',                #Built-In Constant
        'find',                 #Function & Dot Operator
        'float',                #Function
        'For',                  #Keyword
        'If',                   #Keyword
        'int',                  #Function
        'len',                  #Function & Dot Operator
        'lower',                #Function & Dot Operator
        'rfind',                #Function & Dot Operator
        'startswith',           #Function & Dot Operator
        'str',                  #Function & Dot Operator
        'True',                 #Built-In Constant
        'While'                 #Keyword
        #########################
        # '=',                  #Assignment Operator
        # '+=',                 #Assignment Operator
        # '-=',                 #Assignment Operator
        # '*=',                 #Assignment Operator
        # '/=',                 #Assignment Operator
        # '^=',                 #Assignment Operator
        # '+',                  #Math Operator
        # '-',                  #Math Operator
        # '*',                  #Math Operator
        # '/',                  #Math Operator
        # '^',                  #Math Operator
        # '&',                  #Boolean Operator
        # 'and',                #Boolean Operator
        # '|',                  #Boolean Operator
        # 'or',                 #Boolean Operator
        # '!',                  #Boolean Operator
        # 'not',                #Boolean Operator
        # 'in',                 #Boolean Operator
        # 'in:',                #Boolean Operator Case Insensitive
        # '==',                 #Comparison Operator
        # '==:',                #Comparison Operator Case Insensitive
        # '!=',                 #Comparison Operator
        # '!=:',                #Comparison Operator Case Insensitive
        # '>=',                 #Comparison Operator
        # '>=:',                #Comparison Operator Case Insensitive
        # '>',                  #Comparison Operator
        # '>:',                 #Comparison Operator Case Insensitive
        # '<=',                 #Comparison Operator
        # '<=:',                #Comparison Operator Case Insensitive
        # '<',                  #Comparison Operator
        # '<:',                 #Comparison Operator Case Insensitive
#--end keywords2--
        ]

iskeyword = frozenset(kwlist).__contains__

def main():
    import sys, re

    args = sys.argv[1:]
    iptfile = args and args[0] or "graminit.c"
    if len(args) > 1: optfile = args[1]
    else: optfile = "Lib/keyword.py"

    # scan the source file for keywords
    fp = open(iptfile)
    strprog = re.compile('"([^"]+)"')
    lines = []
    for line in fp:
        if '{1, "' in line:
            match = strprog.search(line)
            if match:
                lines.append("        '" + match.group(1) + "',\n")
    fp.close()
    lines.sort()

    # load the output skeleton from the target
    fp = open(optfile)
    Format = fp.readlines()
    fp.close()

    # insert the lines of keywords
    try:
        start = Format.index("#--start keywords--\n") + 1
        end = Format.index("#--end keywords--\n")
        Format[start:end] = lines
    except ValueError:
        sys.stderr.write("target does not contain format markers\n")
        sys.exit(1)

    # write the output file
    fp = open(optfile, 'w')
    fp.write(''.join(Format))
    fp.close()

if __name__ == "__main__":
    main()
