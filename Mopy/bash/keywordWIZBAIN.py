#! /usr/bin/env python

"""Keywords (from "graminit.c")

This file is automatically generated; please don't muck it up!

To update the symbols in this file, 'cd' to the top directory of
the python source tree after building the interpreter and run:

    python Lib/keyword.py
"""

__all__ = ["iskeyword", "kwlist"]

kwlist = [
#--start keywords1--
        '!',
        'Break',
        'Cancel',
        'Case',
        'Continue',
        'Default',
        'DeSelectAll',
        'DeSelectAllEspms',
        'DeSelectEspm',
        'DeSelectSubPackage',
        'DisableINILine',
        'EditINI',
        'EndSelect',
        'Exec',
        'GetEspmStatus',
        'GetFilename',
        'GetFolder',
        'Note',
        'RemoveINILine',
        'RenameEspm',
        'RequireVersions',
        'ResetAllEspmNames',
        'ResetEspmName',
        'Return',
        'SelectAll',
        'SelectAllEspms',
        'SelectEspm',
        'SelectMany',
        'SelectOne',
        'SelectSubPackage',
        ## Directory Names For Games
        # 'Bash Patches',   #WryeBash
        # 'DialogueViews',  #
        # 'DistantLOD',     #Oblivion
        # 'Docs',           #WryeBash
        # 'Facegen',        #Oblivion
        # 'Fonts',          #Oblivion
        # 'Images',         #
        # 'Ini',            #
        # 'INI Tweaks',     #WryeBash
        # 'Interface',      #Skyrim
        # 'LSData',         #
        # 'Menus',          #Oblivion
        # 'Meshes',         #Oblivion,Skyrim
        # 'Music',          #Oblivion
        # 'OBSE',           #Oblivion
        # '--Screenshots',  #
        # 'Screenshots',    #
        # 'Scripts',        #Skyrim
        # 'Shaders',        #Oblivion
        # 'shadersfx',      #
        # 'SKSE',           #Skyrim
        # 'Sound',          #Oblivion,Skyrim
        # 'Strings',        #
        # 'Textures',       #Oblivion,Skyrim
        # 'Video',          #Oblivion,Skyrim
#--end keywords1--
        ]

iskeyword = frozenset(kwlist).__contains__

def main():
    import sys, re

    args = sys.argv[1:]
    iptfile = args and args[0] or "graminit.c"
    if len(args) > 1: optfile = args[1]
    else: optfile = "Lib/keyword.py"

    # scan the source file for keywords
    fp = open(iptfile)
    strprog = re.compile('"([^"]+)"')
    lines = []
    for line in fp:
        if '{1, "' in line:
            match = strprog.search(line)
            if match:
                lines.append("        '" + match.group(1) + "',\n")
    fp.close()
    lines.sort()

    # load the output skeleton from the target
    fp = open(optfile)
    Format = fp.readlines()
    fp.close()

    # insert the lines of keywords
    try:
        start = Format.index("#--start keywords--\n") + 1
        end = Format.index("#--end keywords--\n")
        Format[start:end] = lines
    except ValueError:
        sys.stderr.write("target does not contain format markers\n")
        sys.exit(1)

    # write the output file
    fp = open(optfile, 'w')
    fp.write(''.join(Format))
    fp.close()

if __name__ == "__main__":
    main()
